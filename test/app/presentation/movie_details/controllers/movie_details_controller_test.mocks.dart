// Mocks generated by Mockito 5.4.4 from annotations
// in qagile_task/test/app/presentation/movie_details/controllers/movie_details_controller_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:qagile_task/app/data/providers/api_client.dart' as _i2;
import 'package:qagile_task/app/data/repositories/movie_repository.dart' as _i4;
import 'package:qagile_task/app/domain/entities/movie.dart' as _i6;
import 'package:qagile_task/app/domain/entities/movie_details.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeApiClient_0 extends _i1.SmartFake implements _i2.ApiClient {
  _FakeApiClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMovieDetails_1 extends _i1.SmartFake implements _i3.MovieDetails {
  _FakeMovieDetails_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MovieRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRepository extends _i1.Mock implements _i4.MovieRepository {
  @override
  _i2.ApiClient get apiClient => (super.noSuchMethod(
        Invocation.getter(#apiClient),
        returnValue: _FakeApiClient_0(
          this,
          Invocation.getter(#apiClient),
        ),
        returnValueForMissingStub: _FakeApiClient_0(
          this,
          Invocation.getter(#apiClient),
        ),
      ) as _i2.ApiClient);

  @override
  _i5.Future<List<_i6.Movie>> searchMovies({
    required String? query,
    String? year,
    String? type = r'movie',
    int? page = 1,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchMovies,
          [],
          {
            #query: query,
            #year: year,
            #type: type,
            #page: page,
          },
        ),
        returnValue: _i5.Future<List<_i6.Movie>>.value(<_i6.Movie>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i6.Movie>>.value(<_i6.Movie>[]),
      ) as _i5.Future<List<_i6.Movie>>);

  @override
  _i5.Future<_i3.MovieDetails> getMovieDetails(String? movieId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieDetails,
          [movieId],
        ),
        returnValue: _i5.Future<_i3.MovieDetails>.value(_FakeMovieDetails_1(
          this,
          Invocation.method(
            #getMovieDetails,
            [movieId],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.MovieDetails>.value(_FakeMovieDetails_1(
          this,
          Invocation.method(
            #getMovieDetails,
            [movieId],
          ),
        )),
      ) as _i5.Future<_i3.MovieDetails>);
}
